<%- include('partials/header', {title: 'Storage - HeroPixel Network'}) %>

<div class="flex min-h-screen bg-gray-900">
    <%- include('partials/sidebar', {user: user, currentPage: 'storage'}) %>
    
    <!-- Main Content -->
    <div class="flex-1 lg:ml-64">
        <div class="p-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-white mb-2">File Storage</h1>
                <div class="flex items-center space-x-4">
                    <p class="text-gray-400">
                        Storage used: 
                        <span class="text-blue-400 font-medium">
                            <%= (storageUsed / (1024 * 1024)).toFixed(2) %> MB
                            <% if (storageLimit > 0) { %>
                                / <%= (storageLimit / (1024 * 1024 * 1024)).toFixed(1) %> GB
                            <% } else { %>
                                / Unlimited
                            <% } %>
                        </span>
                    </p>
                    <% if (storageLimit > 0) { %>
                    <div class="w-32 bg-gray-700 rounded-full h-2">
                        <div class="bg-blue-500 h-2 rounded-full" 
                             style="width: <%= Math.min(100, (storageUsed / storageLimit) * 100) %>%"></div>
                    </div>
                    <% } %>
                </div>
            </div>

            <!-- URL Parameters Messages -->
            <script>
                const urlParams = new URLSearchParams(window.location.search);
                const error = urlParams.get('error');
                const success = urlParams.get('success');
                
                if (error) {
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'mb-4 p-4 bg-red-900 bg-opacity-50 border border-red-500 rounded-lg alert-auto-hide';
                    alertDiv.innerHTML = `<p class="text-red-200">${error}</p>`;
                    document.querySelector('.p-8').insertBefore(alertDiv, document.querySelector('.p-8').children[1]);
                }
                
                if (success) {
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'mb-4 p-4 bg-green-900 bg-opacity-50 border border-green-500 rounded-lg alert-auto-hide';
                    alertDiv.innerHTML = `<p class="text-green-200">${success}</p>`;
                    document.querySelector('.p-8').insertBefore(alertDiv, document.querySelector('.p-8').children[1]);
                }
            </script>

            <!-- Upload Section -->
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700 mb-8">
                <h2 class="text-xl font-semibold text-white mb-4">Upload File</h2>
                <form method="POST" action="/storage/upload" enctype="multipart/form-data" class="space-y-4">
                    <div>
                        <label for="file" class="block text-sm font-medium text-gray-300 mb-2">
                            Choose File
                        </label>
                        <input type="file" id="file" name="file" required
                               class="block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-blue-600 file:text-white hover:file:bg-blue-700 file:cursor-pointer cursor-pointer bg-gray-700 border border-gray-600 rounded-lg">
                        <p class="mt-1 text-xs text-gray-400">Max file size: 100MB</p>
                    </div>

                    <div>
                        <label for="visibility" class="block text-sm font-medium text-gray-300 mb-2">
                            Visibility
                        </label>
                        <select id="visibility" name="visibility" 
                                class="block w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="private">Private (Only you can access)</option>
                            <option value="public">Public (Anyone can download)</option>
                        </select>
                    </div>

                    <button type="submit"
                            class="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500">
                        Upload File
                    </button>
                </form>
            </div>

            <!-- Tabs -->
            <div class="mb-6">
                <nav class="flex space-x-8">
                    <button onclick="showTab('my-files')" id="my-files-tab" 
                            class="tab-button py-2 px-1 border-b-2 font-medium text-sm border-blue-500 text-blue-400">
                        My Files (<%= userFiles.length %>)
                    </button>
                    <button onclick="showTab('public-files')" id="public-files-tab"
                            class="tab-button py-2 px-1 border-b-2 font-medium text-sm border-transparent text-gray-400 hover:text-gray-300">
                        Public Files (<%= publicFiles.length %>)
                    </button>
                </nav>
            </div>

            <!-- My Files Tab -->
            <div id="my-files" class="tab-content">
                <div class="bg-gray-800 rounded-lg border border-gray-700">
                    <div class="px-6 py-4 border-b border-gray-700">
                        <h3 class="text-lg font-semibold text-white">Your Files</h3>
                    </div>
                    <div class="p-6">
                        <% if (userFiles.length === 0) { %>
                        <div class="text-center py-8">
                            <svg class="mx-auto h-12 w-12 text-gray-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                            </svg>
                            <p class="text-gray-400">No files uploaded yet</p>
                        </div>
                        <% } else { %>
                        <div class="space-y-3">
                            <% userFiles.forEach(function(file) { %>
                            <div class="flex items-center justify-between p-4 bg-gray-700 rounded-lg border border-gray-600">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-8 h-8 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                    </svg>
                                    <div>
                                        <p class="text-white font-medium"><%= file.original_name %></p>
                                        <p class="text-sm text-gray-400">
                                            <%= (file.filesize / (1024 * 1024)).toFixed(2) %> MB • 
                                            <%= file.visibility %> • 
                                            <%= new Date(file.upload_date).toLocaleDateString() %>
                                        </p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <a href="/download/<%= file.id %>" 
                                       class="px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors">
                                        Download
                                    </a>
                                    <button onclick="deleteFile(<%= file.id %>)" 
                                            class="px-3 py-1 text-sm bg-red-600 hover:bg-red-700 text-white rounded transition-colors">
                                        Delete
                                    </button>
                                </div>
                            </div>
                            <% }); %>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Public Files Tab -->
            <div id="public-files" class="tab-content hidden">
                <div class="bg-gray-800 rounded-lg border border-gray-700">
                    <div class="px-6 py-4 border-b border-gray-700">
                        <h3 class="text-lg font-semibold text-white">Public Files</h3>
                    </div>
                    <div class="p-6">
                        <% if (publicFiles.length === 0) { %>
                        <div class="text-center py-8">
                            <svg class="mx-auto h-12 w-12 text-gray-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                            </svg>
                            <p class="text-gray-400">No public files available</p>
                        </div>
                        <% } else { %>
                        <div class="space-y-3">
                            <% publicFiles.forEach(function(file) { %>
                            <div class="flex items-center justify-between p-4 bg-gray-700 rounded-lg border border-gray-600">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-8 h-8 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                    </svg>
                                    <div>
                                        <p class="text-white font-medium"><%= file.original_name %></p>
                                        <p class="text-sm text-gray-400">
                                            By <%= file.username %> • 
                                            <%= (file.filesize / (1024 * 1024)).toFixed(2) %> MB • 
                                            <%= new Date(file.upload_date).toLocaleDateString() %>
                                        </p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <a href="/download/<%= file.id %>" 
                                       class="px-3 py-1 text-sm bg-green-600 hover:bg-green-700 text-white rounded transition-colors">
                                        Download
                                    </a>
                                </div>
                            </div>
                            <% }); %>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Tab functionality
    function showTab(tabName) {
        // Hide all tab contents
        document.querySelectorAll('.tab-content').forEach(content => {
            content.classList.add('hidden');
        });
        
        // Show selected tab content
        document.getElementById(tabName).classList.remove('hidden');
        
        // Update tab button styles
        document.querySelectorAll('.tab-button').forEach(button => {
            button.classList.remove('border-blue-500', 'text-blue-400');
            button.classList.add('border-transparent', 'text-gray-400');
        });
        
        // Activate selected tab button
        const activeTab = document.getElementById(tabName + '-tab');
        activeTab.classList.remove('border-transparent', 'text-gray-400');
        activeTab.classList.add('border-blue-500', 'text-blue-400');
    }
    
    // Delete file function
    async function deleteFile(fileId) {
        if (!confirm('Are you sure you want to delete this file? This action cannot be undone.')) {
            return;
        }
        
        try {
            const response = await fetch(`/storage/delete/${fileId}`, {
                method: 'POST'
            });
            
            const result = await response.json();
            
            if (result.success) {
                location.reload();
            } else {
                alert('Failed to delete file: ' + (result.error || 'Unknown error'));
            }
        } catch (error) {
            alert('Failed to delete file: ' + error.message);
        }
    }
    
    // File upload progress (optional enhancement)
    document.getElementById('file').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const maxSize = 100 * 1024 * 1024; // 100MB
            if (file.size > maxSize) {
                alert('File size must be less than 100MB');
                e.target.value = '';
            }
        }
    });
</script>

<%- include('partials/footer') %>